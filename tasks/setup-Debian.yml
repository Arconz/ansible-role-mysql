---
- name: Check if MySQL is already installed.
  ansible.builtin.stat:
    path: "{{ mysql_config_file }}"
  register: mysql_installed

- name: Update apt cache if MySQL is not yet installed.
  ansible.builtin.apt:
    update_cache: yes
  changed_when: False
  when: not mysql_installed.stat.exists

- name: Ensure MySQL Python libraries are installed.
  ansible.builtin.apt:
    name: "{{ mysql_python_package_debian }}"
    state: present

- name: Ensure MySQL packages are installed.
  ansible.builtin.apt:
    name: "{{ mysql_packages }}"
    state: present
    policy_rc_d: 101
  register: deb_mysql_install_packages

# Because Ubuntu starts MySQL as part of the install process, we need to stop
# mysql and remove the logfiles in case the user set a custom log file size.
# MariaDB after version 10.5 resized the log file based on settings
# Clearing the log file in these version breaks the install

- name: Ensure MySQL is stopped after initial install
  ansible.builtin.service:
    name: "{{ mysql_daemon }}"
    state: stopped
  when: not mysql_installed.stat.exists

- name: Check MariaDB version
  ansible.builtin.shell:
    cmd: "mariadb --version"
  register: mariadb_version_output
  changed_when: false
  ignore_errors: true

- debug:
    var: mariadb_version_output.stdout

- set_fact:
    mariadb_version: "{{ mariadb_version_output.stdout | regex_replace('.*Distrib ([0-9]+\\.[0-9]+\\.[0-9]+).*', '\\1') }}"
  when: mariadb_version_output.stdout is match('.*Distrib [0-9]+\\.[0-9]+\\.[0-9]+.*')

- name: Delete InnoDB log files created by apt package after initial install
  ansible.builtin.file:
    path: "{{ mysql_datadir }}/{{ item }}"
    state: absent
  loop:
    - ib_logfile0
    - ib_logfile1
  when: >
    not mysql_installed.stat.exists
    and ansible_distribution_major_version | int < 12
    and mariadb_version is version('10.5', '<=')